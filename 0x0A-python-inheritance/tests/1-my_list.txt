# 1-my_list.py

The class Mylist that inherits from list:
prototype: class Mylist(list):
Public instance method: def print_sorted(self): that prints the list, but sorted (ascending sort)
You can assume that all the elements of the list will be of type int

Import:
>>> Mylist = __import__('1-my_list').MyList

Tests:

>>> issubclass(Mylist, list)
True

>>> my_list = Mylist()
>>> my_list.print_sorted()
[]
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(4)
>>> print(my_list)
[1, 2, 3, 4]
>>> my_list.print_sorted()
[1, 2, 3, 4]

>>> my_list = Mylist()
>>> my_list.append(4)
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.append(1)
>>> print(my_list)
[4, 3, 2, 1]
>>> my_list.print_sorted()
[1, 2, 3, 4]
>>> print(my_list)
[4, 3, 2, 1]
>>> my_list.append(-1)
>>> my_list.append(5)
>>> print(my_list)
[4, 3, 2, 1, -1, 5]
>>> my_list.print_sorted()
[-1, 1, 2, 3, 4, 5]
>>> print(my_list)
[4, 3, 2, 1, -1, 5]

>>> my_list = Mylist()
>>> my_list.append(-10)
>>> my_list.append(-1)
>>> my_list.append(-7)
>>> my_list.append(-2)
>>> my_list.append(-8)
>>> print(my_list)
[-10, -1, -7, -2, -8]
>>> my_list.print_sorted()
[-10, -8, -7, -2, -1]
>>> print(my_list)
[-10, -1, -7, -2, -8]
>>> my_list.print_sorted(1)
Traceback (most recent call last):
        ...
TypeError: MyList.print_sorted() takes 1 positional argument but 2 were given